// –ª–æ–≥—ñ–∫–∞ –ø—Ä–æ—î–∫—Ç—É
document.addEventListener("DOMContentLoaded", () => {
    const main = document.querySelector("main");

    const pages = {
        recipes: `
            <div class="saved"> 
                <button>–ó–±–µ—Ä–µ–∂–µ–Ω—ñ —Ä–µ—Ü–µ–ø—Ç–∏</button>
                <button>–ó–±–µ—Ä–µ–∂–µ–Ω—ñ –ø–æ—Ä–∞–¥–∏</button>
            </div>
            <hr>
            <h2>–†–µ—Ü–µ–ø—Ç–∏</h2>
            <div class="recipes">
                <button>
                    <img class="kart" src="https://images.unian.net/photos/2024_11/thumb_files/860_470_1730993412-6127.jpg" alt="–í–∏–ø—ñ—á–∫–∞">
                    <p>–í–∏–ø—ñ—á–∫–∞</p>
                </button>
                <button class="budka">
                    <img class="kart" src="https://ukr.media/static/ba/aimg/3/8/9/389015_1.jpg" alt="–ü–µ—Ä—à—ñ —Å—Ç—Ä–∞–≤–∏">
                    <p>–ü–µ—Ä—à—ñ —Å—Ç—Ä–∞–≤–∏</p>
                </button>
                <button class="budka">
                    <img class="kart" src="https://papigutto.com.ua/wp-content/uploads/2016/07/Screenshot_405.jpg" alt="–ú'—è—Å–æ">
                    <p>–ú'—è—Å–æ</p>
                </button>
                <button class="budka">
                    <img class="kart" src="https://smachno.ua/wp-content/uploads/2023/04/06/pexels-figen-kokol-15490120-640x400.jpg" alt="–ö–∞—Ä—Ç–æ–ø–ª—è">
                    <p>–ö–∞—Ä—Ç–æ–ø–ª—è</p>
                </button>
                <button class="budka">
                    <img class="kart" src="https://www.kikkoman.ru/fileadmin/_processed_/3/3/csm_1213_Recipe-Page_Cantonese_Tofu_Stir-FryNoodles_SoySauce_Step1_ea389c55db.webp" alt="–õ–∞–ø—à–∞">
                    <p>–õ–∞–ø—à–∞</p>
                </button>
                <button class="budka" id="kartBosh">

                    <img class="kart" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRyfb9UpUDSBZMMoSuY5iU2Gn1lXTZ7nhNo4g&s" alt="–ë–æ—Ä—â—ñ">
                    <p>–ë–æ—Ä—â—ñ</p>
                </button>
            </div>
        `,
        tips: `
            <h2>–ü–æ—Ä–∞–¥–∏</h2>
            <div class="tips">
                <div class="tip">
                    <h3>1Ô∏è‚É£ –Ø–∫ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –æ–≤–æ—á—ñ —Å–≤—ñ–∂–∏–º–∏</h3>
                    <p>–ù–µ –º–∏–π –æ–≤–æ—á—ñ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è–º. –í–æ–ª–æ–≥–∞ –ø—Ä–∏—à–≤–∏–¥—à—É—î –ø—Å—É–≤–∞–Ω–Ω—è.</p>
                </div>
                <div class="tip">
                    <h3>2Ô∏è‚É£ –°–µ–∫—Ä–µ—Ç —ñ–¥–µ–∞–ª—å–Ω–æ—ó –≤–∏–ø—ñ—á–∫–∏</h3>
                    <p>–î—ñ—Å—Ç–∞–Ω—å —è–π—Ü—è —ñ –º–∞—Å–ª–æ –∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å, —â–æ–± –≤–æ–Ω–∏ –±—É–ª–∏ –∫—ñ–º–Ω–∞—Ç–Ω–æ—ó —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏.</p>
                </div>
                <div class="tip">
                    <h3>3Ô∏è‚É£ –©–æ–± –Ω–µ –ø–µ—Ä–µ—Å–æ–ª–∏—Ç–∏</h3>
                    <p>–î–æ–¥–∞–≤–∞–π —Å—ñ–ª—å –ø–æ—Å—Ç—É–ø–æ–≤–æ —ñ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ –ø—Ä–æ–±—É–π —Å—Ç—Ä–∞–≤—É.</p>
                </div>
            </div>
        `,
        contacts: `
            <h2>–ö–æ–Ω—Ç–∞–∫—Ç–∏</h2>
            <div class="contacts">
                <p><strong>üìß Email:</strong> bestchoice.help@gmail.com</p>
                <p><strong>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</strong> +380 98 123 45 67</p>
                <p><strong>üìç –ê–¥—Ä–µ—Å–∞:</strong> –ü—ñ–¥–≥–æ—Ä–æ–¥–Ω—î, –≤—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞, 30</p>
                <hr>
                <p>–ú–∏ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –≤ –Ω–µ–¥—ñ–ª—é, 14:00‚Äì15:30.</p>
            </div>
        `
    };

    function loadPage(pageName) {
        main.classList.add("fade-out");
        setTimeout(() => {
            main.innerHTML = pages[pageName];
            main.classList.remove("fade-out");
            main.classList.add("fade-in");
            setTimeout(() => main.classList.remove("fade-in"), 300);
            if (pageName === "recipes") initializeRecipeLogic();
        }, 300);
    }

    document.querySelectorAll("header nav a").forEach(link => {
        link.addEventListener("click", (e) => {
            e.preventDefault();
            const text = e.target.innerText.toLowerCase();
            if (text.includes("—Ä–µ—Ü–µ–ø—Ç–∏")) loadPage("recipes");
            if (text.includes("–ø–æ—Ä–∞–¥–∏")) loadPage("tips");
            if (text.includes("–∫–æ–Ω—Ç–∞–∫—Ç–∏")) loadPage("contacts");
        });
    });

    function initializeRecipeLogic() {
        const searchInput = document.querySelector(".search-bar input");
        const searchBtn = document.querySelector(".serch_btn");
        const recipes = document.querySelectorAll(".recipes button");

        function searchRecipes() {
            const query = searchInput.value.toLowerCase().trim();
            recipes.forEach(recipe => {
                const text = recipe.innerText.toLowerCase();
                const alt = recipe.querySelector("img").alt.toLowerCase();
                recipe.style.display = (text.includes(query) || alt.includes(query)) ? "block" : "none";
            });
        }

        searchBtn.onclick = searchRecipes;
        searchInput.onkeypress = (e) => e.key === "Enter" && searchRecipes();

        const savedRecipesBtn = document.querySelector(".saved button:first-child");
        const savedTipsBtn = document.querySelector(".saved button:last-child");
        let savedRecipes = JSON.parse(localStorage.getItem("savedRecipes")) || [];

        recipes.forEach(recipe => {
            const overlay = document.createElement("div");
            overlay.classList.add("overlay");
            overlay.innerText = "";
            recipe.appendChild(overlay);

            recipe.addEventListener("mouseenter", () => recipe.classList.add("hovered"));
            recipe.addEventListener("mouseleave", () => recipe.classList.remove("hovered"));

            recipe.addEventListener("click", () => {
                const title = recipe.querySelector("p").innerText;

                if (title === "–ö–∞—Ä—Ç–æ–ø–ª—è") {
                    window.location.href = "kartoha.html";
                    return;
                }
                if (title === "–ú'—è—Å–æ") {
                    window.location.href = "myaso.html";
                    return;
                }
                if (title === "–ü–µ—Ä—à—ñ —Å—Ç—Ä–∞–≤–∏") {
                    window.location.href = "first_havchik.html";
                    return;
                }
                if (title === "–ë–æ—Ä—â—ñ") {
                    window.location.href = "Borchi.html";
                    return;
                }
                if (title === "–õ–∞–ø—à–∞") {
                    window.location.href = "lapsha.html";
                    return;
                }

                if (!savedRecipes.includes(title)) {
                    savedRecipes.push(title);
                    localStorage.setItem("savedRecipes", JSON.stringify(savedRecipes));
                    alert(`"${title}" –¥–æ–¥–∞–Ω–æ –¥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö!`);
                } else {
                    alert(`"${title}" –≤–∂–µ —î —É –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö!`);
                }
            });
        });

        savedRecipesBtn.onclick = () => {
            alert(savedRecipes.length
                ? "–ó–±–µ—Ä–µ–∂–µ–Ω—ñ —Ä–µ—Ü–µ–ø—Ç–∏:\n" + savedRecipes.join("\n")
                : "–ù–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —Ä–µ—Ü–µ–ø—Ç—ñ–≤ üòî"
            );
        };

        savedTipsBtn.onclick = () => alert("–§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ä–∞–¥ —â–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ üòâ");
    }
    
    const optionsBtn = document.querySelector(".options_btn");
    const headerNav = document.querySelector("header nav");
    optionsBtn.addEventListener("click", () => headerNav.classList.toggle("active"));

    if (window.location.pathname.endsWith("index.html") || window.location.pathname === "/") {
        loadPage("recipes");
    }
});
